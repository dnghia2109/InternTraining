package org.example.Level4;

import org.w3c.dom.ls.LSOutput;

import java.util.*;

public class Excercise2 {
    // Write a program that takes a list of integers as input and
    // returns the number of distinct subsequences of the list that sum up to a target value.
    //VD: 
    //ƒê·∫ßu v√†o [1, 2, 3, 4, 5] v√† 5 üëâ 2 ( v√¨ 2 + 3 v√† 1 + 4 b·∫±ng 5 )
    //ƒê·∫ßu v√†o [1, 1, 2, 3, 4] v√† 5 üëâ 4 ( v√¨ 4 t·ªï h·ª£p c√≥ t·ªïng b·∫±ng 5 )



//    public static int countDistinctSubsequences(List<Integer> nums, int target) {
//        int[] dp = new int[target + 1];
//        dp[0] = 1;
//
//        for (int num : nums) {
//            for (int j = target; j >= num; j--) {
//                dp[j] += dp[j - num];
//            }
//        }
//
//        return dp[target];
//    }


    //listNumber: [1, 1, 2, 3, 4]
    //target: 5
    //
    //    0   1   2   3   4   5
    //0   1   0   0   0   0   0
    //1   1   1   0   0   0   0
    //2   1   2   1   0   0   0
    //3   1   2   2   2   1   0
    //4   1   2   2   3   3   2
    //5   1   2   2   3   3   4

    // dp[i][j] b·∫±ng dp[i - 1][j] ƒë·∫°i di·ªán cho tr∆∞·ªùng h·ª£p kh√¥ng bao g·ªìm ph·∫ßn t·ª≠ th·ª© i trong d√£y con c√≥ t·ªïng b·∫±ng j.
    // ƒêi·ªÅu n√†y x·∫£y ra v√¨ dp[i - 1][j] ƒë√£ ch·ª©a to√†n b·ªô c√°c d√£y con kh√°c nhau c√≥ t·ªïng b·∫±ng j m√† kh√¥ng s·ª≠ d·ª•ng ph·∫ßn t·ª≠ th·ª© i.
    //
    // dp[i][j] += dp[i - 1][j - listNumber.get(i - 1)] ƒë·∫°i di·ªán cho tr∆∞·ªùng h·ª£p bao g·ªìm ph·∫ßn t·ª≠ th·ª© i trong d√£y con c√≥ t·ªïng b·∫±ng j.
    // ·ªû ƒë√¢y, listNumber.get(i - 1) ƒë·ªÅ c·∫≠p ƒë·∫øn gi√° tr·ªã c·ªßa ph·∫ßn t·ª≠ th·ª© i trong danh s√°ch listNumber. j - listNumber.get(i - 1)
    // t∆∞∆°ng ·ª©ng v·ªõi t·ªïng c·∫ßn t·∫°o ra sau khi lo·∫°i b·ªè ph·∫ßn t·ª≠ th·ª© i. V√† dp[i - 1][j - listNumber.get(i - 1)] ƒë·∫°i di·ªán cho s·ªë l∆∞·ª£ng
    // d√£y con kh√°c nhau c√≥ t·ªïng b·∫±ng j - listNumber.get(i - 1) s·ª≠ d·ª•ng c√°c ph·∫ßn t·ª≠ t·ª´ ph·∫ßn t·ª≠ ƒë·∫ßu ƒë·∫øn ph·∫ßn t·ª≠ th·ª© i - 1.
    //
    // Nh∆∞ v·∫≠y, c·∫£ hai ph·∫ßn trong c√¥ng th·ª©c dp[i][j] += dp[i - 1][j - listNumber.get(i - 1)] ƒë·ªÅu tham gia v√†o vi·ªác t√≠nh to√°n s·ªë l∆∞·ª£ng
    // c√°c d√£y con kh√°c nhau c√≥ t·ªïng b·∫±ng j v√† bao g·ªìm ph·∫ßn t·ª≠ th·ª© i ho·∫∑c kh√¥ng.

    public static void main(String[] args) {
        List<Integer> listNumber = new ArrayList<>(List.of(1, 1, 2, 3, 4));
        int target = 5;
        int n = listNumber.size();
        int[][] dp = new int[n + 1][target + 1];
        for (int i = 0; i <= n; i++) {
            dp[i][0] = 1; //! Tr∆∞·ªùng h·ª£p target = 0, t·ªìn t·∫°i m·ªôt d√£y r·ªóng c√≥ t·ªïng b·∫±ng 0
        }
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= target; j++) {
                dp[i][j] = dp[i - 1][j]; //! Kh√¥ng bao g·ªìm ph·∫ßn t·ª≠ th·ª© i
                if (listNumber.get(i - 1) <= j) {
                    dp[i][j] += dp[i - 1][j - listNumber.get(i - 1)]; //! Bao g·ªìm ph·∫ßn t·ª≠ th·ª© i
                }
            }
        }
        System.out.println(dp[n][target]);
    }
}
